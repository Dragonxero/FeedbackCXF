package com.rantandrave.rjoseph;

import java.util.ArrayList;
import java.util.List;

import org.junit.FixMethodOrder;
import org.junit.runners.*;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.jayway.restassured.http.ContentType;
import com.jayway.restassured.response.Response;
import com.rantandrave.rjoseph.model.UserFeedback;

import static org.junit.Assert.*;

//REST-Assured RESTful testing framework imports
import static com.jayway.restassured.RestAssured.*;
import static com.jayway.restassured.matcher.RestAssuredMatchers.*;
import static org.hamcrest.Matchers.*;

/*
 * This Java source file was auto generated by running 'gradle init --type java-library'
 * by 'sixman9' with Gradle 2.0
 *
 * @author sixman9
 */
@FixMethodOrder(MethodSorters.NAME_ASCENDING)	//JUnit 4.11+, lexicographic/alphabetical ordered method name testing!
public class FeedbackRESTServiceTest {
	
	private Logger log = LoggerFactory.getLogger(FeedbackRESTServiceTest.class);
	private List<Integer> feedbackIds = new ArrayList<>();	
	
	/*
	static {
		baseURI = "127.0.0.1";
		port = 8080;
		basePath = "/";
	}
	*/
	
    @Test public void test1SubmitFeedback() {   
    	UserFeedback userFeedbackModel = new UserFeedback();
    	
    	userFeedbackModel.setUsername("Big Rich");
    	userFeedbackModel.setScore(8);
    	userFeedbackModel.setReview("Very Good!");
    	
    	//Storing the test Response is not strictly necessary, however, may be useful, later
    	Response response = given().contentType(ContentType.JSON)
        .body(userFeedbackModel)
        .expect().
        	contentType(ContentType.JSON).
        	statusCode(201).
        	body("feedbackId", equalTo(1))
        .when().post("http://127.0.0.1:8080/feedback/save");
    	
    	log.info(response.body().asString());
    }
	
    @Test public void test2GetFeedbackByID() {
    	assertTrue(false);
    }
	
    @Test public void test3GetFeedbackByUser() {
    	assertTrue(false);
    }
	
    @Test public void test4DeleteFeedbackByID() {    	
    	assertTrue(false);
    }
}
